Face face = new Face();
void setup() {
	//size( window.innerWidth, window.innerHeight );
	size(500, 500);
}

void draw() {
	background(#cccccc);
	face.render();
}

void mousePressed() {
	face.grab(mouseX, mouseY);
}
void mouseReleased() {
	face.leave();
}

class Face {

	PVector grabber = new PVector(0, 0);
	float dist4grab = 10;
	boolean grabbed = false;

	PVector pos = new PVector(125, 150);

	PVector upLft0 = new PVector(-25, -100);
	PVector upLft1 = new PVector(-50, -50);
	PVector btmLft1 = new PVector(-50, 50);
	PVector btmLft0 = new PVector(-25, 100);

	PVector upRgt0 = new PVector(25, -100);
	PVector upRgt1 = new PVector(50, -50);
	PVector btmRgt1 = new PVector(50, 50);
	PVector btmRgt0 = new PVector(25, 100);
	
	void render() {
		noFill();
		if (grabbed) {
			pos.x = mouseX;
			pos.y = mouseY;
		}
		translate(pos.x, pos.y);
		beginShape();
		vertex(upLft0.x, upLft0.y);
		vertex(upLft1.x, upLft1.y);
		vertex(btmLft1.x, btmLft1.y);
		vertex(btmLft0.x, btmLft0.y);
		vertex(btmRgt0.x, btmRgt0.y);
		vertex(btmRgt1.x, btmRgt1.y);
		vertex(upRgt1.x, upRgt1.y);
		vertex(upRgt0.x, upRgt0.y);
		endShape(CLOSE);

		renderGrabber();
	}
	
	void renderGrabber() {
		strokeWeight(1);
		fill(204, 102, 0);
		ellipseMode(CENTER);
		ellipse(grabber.x, grabber.y, dist4grab, dist4grab);
	}
	
	void grab(float mx, float my) {
		if (dist((grabber.x + pos.x), (grabber.y + pos.y), mx, my) < 10) {
			grabbed = true;
		}
	}

	void leave() {
		grabbed = false;
	}
}